// Example hotpot.cfg
// You are NOT recommended to edit this file directly. Instead create your
// own hotpot.cfg file and use the --config option to point Hotpot at it.
//
// Note that $ in strings is used to refer to environment variables e.g.
// $HOME
//
{
  server: {
    // Home location of the central heating system, optional
    location: {
      latitude: 57.812502,
      longitude: -8.573135
    },
    port: 13196, // server network port
    docroot: "$PWD/../..",
    ssl: { // optional
      // HTTPS key server private key `key` and certificate `cert`.
      // If no private key and certificate are given, an HTTP server
      // will be used.
      // Key/cert must be generated e.g. using openssl
      cert: "$HOME/hotpot.crt",
      key: "$HOME/hotppot.key" 
    },
    auth: { // optional, BasicAuth details
      user: "hotpot",
      pass: "hotpot",
      realm: "hotpot"
    }
  },
  controller: {
    thermostat: {
      // Sets up the DS18X20 thermostats available to the system.
      HW: {
        // ID of the ds18x20 device
        id: "28-0115914ff5ff",
        history: { // Optional, see README.md#History
          // Where to store the history, and how often to sample
          file: "/var/log/hotpot/HW_temp.log",
          // Gap between history snapshots, 60 seconds
          interval: 60000
        },
        timeline: {
          min: 0,
          max: 50,
          period: 86400000,
          points: [
            { times: "00:00", value: 10 },
            { times: "06:00", value: 50 },
            { times: "18:00", value: 10 }
          ]
        }
      },
      CH: {
        id: "29-0155917ff58f",
        history: { file: "/var/log/hotpot/CH_temp.log" },
        timeline: {
          min: 0,
          max: 50,
          period: 86400000,
          points: [
            { times: "00:00", value: 10 },
            { times: "08:00", value: 20 },
            { times: "22:00", value: 10 }
          ]
        }
      }
    },
    pin: {
      // Sets up the GPIO pins, mapping the pin name to the GPIO pin
      // number.
      // The pin names `HW` and `CH` have special support to take account
      // of a subtle dependency in Y-plan systems, but otherwise pin names
      //  are up to the user.
      HW: {
        // RPi gpio
        gpio: 23,
        history: { // Optional, see README.md#History
          // Where to store the history, and how big to let it grow
          // Normally this will be in /var/log
          file: "$HOME/HW_state.log"
        }
      },
      CH: {
        gpio: 25,
        history: { file: "$HOME/CH_state.log" }
      }
    },
    rule: {
      // List of rules that are used to control state of the system. Rules
      // are executed in the order they are specified. See README.md.
      "Hot Water" : {
        // Path relative to where the Hotpot.js script is run from
        $instance_of: "server/js/HotWaterRule"
      },
      "Central Heating": {
        $instance_of: "server/js/CentralHeatingRule"
      }
    },
    calendar: { // Calendars
      "Example": {
        // Currently only type "GoogleCalendar" is supported
        $instance_of: "server/js/GoogleCalendar",
        id: "primary", // name of the calendar
        prefix: "hotpot:", // prefix for requests in calendar events
        // pathname of a file on the server used to cache the
        // authentication for this calendar
        auth_cache: "$HOME/google_calendar.authcache",
        // Secrets used by calendar (see Calendars in README.md)
        secrets: {
          client_id: "748295330634-stsav91ruqclo45gu873opsput6ljoabsapph.googleusercontent.com",
          client_secret: "XAffgnutso4kk4whs06dss6DD",
          redirect_uris: [ "urn:ietf:wg:oauth:2.0:oob", "http://localhost" ]
        }
      }
    },
    weather: {
      // Data services providing weather information. In the
      // reference implementation (class "MetOffice", weather
      // information is retrieved from the UK Meteorological
      // Office data service. Each entry here corresponds to the
      // class that provides the service.
      "MetOffice": {
        $instance_of: "server/js/MetOffice",
        // An API key is required. These are available for free.
        api_key: "f6fd8945-e57f-4768-8fa2-59fa19a5fc6d",
        history: { // Optional, see README.md#History
          file: "/var/log/hotpot/weather.log"
        }
      }
    },
    mail: { // optional, email to notify if something is wrong
            // requiring admin intervention
      host: "smtp.ethereal.email",
      port: 587,
      user: "hotpot",
      pass: "hotpot",
      from: "hotpot@hotpot.co.uk",
      to: "hotpot@hotpot.co.uk"
    }
  }
}
