{
  server: {
    // By default, use a port not normally probed
    port: 13196,
    ssl: {
      // Key/cert must be generated e.g. using openssl
      cert: "$HOME/hotpot.crt",
      key: "$HOME/hotppot.key" 
    }
  },
  apis: {
    google_maps: {
      // These keys are obtained from the google developer console
      server_key: "AIzaSgQGFjk8d3isThGfake-VsIsUKNpir4teyI",
      browser_key: "AIzaClo5trid1umf198D1Ffic1leRk0_3cLC-do",
      ip: "99.208.108.90"
    },
    weather: {
      class: "MetOffice",
      // This key is generated on the MetOffice website
      api_key: "f6b782a5-e57f-4999-8df3-a96219f5fa6d"
    }
  },
  controller: {
    // Home location of the central heating system
    location: {
      lat: 51.2479773,
      lng: -6.594294
    },
    thermostat: {
      HW: {
        // ID of the ds18x20 device
        id: "28-0115914ff5ff",
	// Where to store the history, and how often to sample
        history: {
          file: "$HOME/Projects/Hotpot/HW_temp.log",
          interval: 60,
          limit: 86400
        }
      },
      CH: {
        ...
      }
    },
    pin: {
      CH: {
	// RPi gpio
        gpio: 23,
	// Where to store the history, and how often to sample
        history: {
          file: "$HOME/Projects/Hotpot/CH_state.log",
	  // Allow it to grow to 1MB
          maxbytes: 1000000
        }
      },
      HW: {
        ...
      }
    },
    mobile: {
      Phone: {
	// Android device ID
        id: "3e19118c5e36d420"
      },
      Browser: {
        id: "debug"
      }
    },
    rule: [
      {
        name: "Hot Water",
        test: function () {
  var state = this.pin.HW.getState();

  if (this.thermostat.HW.temperature > 40) {
    // Hot enough, so switch off regardless of other rules
   if (state === 1) {
      console.TRACE(TAG, "Tank is " + this.thermostat.HW.temperature
                         + " so HW off");
      this.setPin("HW", 0);
    }
    return;
  }

  var req = this.pin.HW.getActiveRequest();
  if (req) {
    this.setPin("HW", req.state);
    return;
  }

  // Now see if there's any demand
  var at_home = 0, arrive_soon = 0;
  for (var moby in this.mobile) {
    var m = this.mobile[moby];
    if (m.arrivesIn() < 60)
      at_home++;
    else if (m.arrivesIn() < 20 * 60)
      arrive_soon++;
  }
  if (at_home + arrive_soon === 0) {
    if (state === 1) {
      console.TRACE(TAG, "No demand so HW off");
      this.setPin("HW", 0);
    }
    return;
  }
  
  // There is demand. If it's "unknown" or "at_home" only,
  // then consider the time
  if (arrive_soon == 0
      && (Time.between('08:30', '18:00') // day
       || Time.between('20:00', '06:30')) // night
     ) {
      if (state === 1)
          console.TRACE(TAG,
                        "Demand is at home, and out of time band, so HW off");
      this.setPin("HW", 0);
      return;
  }

  // Demand is away from home, or we are in time band
  if (state === 0 && this.thermostat.HW.temperature < 34) {
      console.TRACE(TAG,"HW on");
      this.setPin("HW", 1);
      return;
  }
}
      },
      {
        name: "Central Heating",
        test: function () {
  var state = this.pin.CH.getState();

  if (this.thermostat.CH.temperature > 18) {
    // Warm enough inside, so switch off regardless of other rules
    if (state === 1) {
      console.TRACE(TAG, "Room is " + this.thermostat.CH.temperature
                         + " so CH off");
      this.setPin("CH", 0);
    }
    return;
  }

  var req = this.pin.CH.getActiveRequest();
  if (req) {
    this.setPin("CH", req.state);
    return;
  }

  if (this.weather("Feels Like Temperature") > 14) {
    if (state === 1) {
      console.TRACE(TAG, "Weather is " + this.weather("Feels Like Temperature")
                         + " so CH off");
      this.setPin("CH", 0);
    }
    return;
  }

  // Now see if there's any demand
  var at_home = 0, arrive_soon = 0;
  for (var moby in this.mobile) {
    var m = this.mobile[moby];
    if (m.arrivesIn() < 60)
      at_home++;
    else if (m.arrivesIn() < 20 * 60)
      arrive_soon++;
  }

  if (at_home + arrive_soon === 0) {
    if (state === 1) {
      console.TRACE(TAG, "No demand so CH off");
      this.setPin("CH", 0);
    }
    return;
  }
  
  // There is demand. If it's "unknown" or "at_home" only,
  // then consider the time
  if (arrive_soon == 0
      && !Time.between('08:00', '18:00') // day
      && Time.between('22:00', '06:30') // night
     ) {
      if (state === 1)
          console.TRACE(TAG,
                        "Demand is at home, and out of time band, so CH off");
      this.setPin("CH", 0);
      return;
  }

  // Demand is away from home, or we are in time band
  if (state === 0 && this.thermostat.CH.temperature < 16) {
      console.TRACE(TAG,"CH on");
      this.setPin("CH", 1);
      return;
  }
}
      }
    ]
  }
}
