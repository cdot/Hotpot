modules.exports = {
  server: {
    // Home location of the central heating system
    location: {
      lat: 51.2479773,
      lng: -6.594294
    },
    port: 13196, // network port. Use a port not normally probed
    ssl: { // optional
      // HTTPS key server private key `key` and certificate `cert`.
      // If no private key and certificate are given, an HTTP server
      // will be used.
      // Key/cert must be generated e.g. using openssl
      cert_file: "$HOME/hotpot.crt",
      key_file: "$HOME/hotppot.key" 
    },
    auth: { // optional, BasicAuth details
      user: "hotpot",
      pass: "blackstuff",
      realm: "hotpot"
    }
  },
  controller: {
    thermostat: {
      // Sets up the DS18X20 thermostats available to the system.
      HW: {
        // ID of the ds18x20 device
        id: "28-0115914ff5ff",
        history: { // Optional, see README.md#History
          // Where to store the history, and how often to sample
          file: "/var/log/hotpot/HW_temp.log",
          // Gap between history snapshots, in seconds
          interval: 60
        }
      },
      CH: {
        ...
      }
    },
    pin: {
      // Sets up the GPIO pins, mapping the pin name to the GPIO pin number.
      // The pin names `HW` and `CH` have special support to take account
      // of a subtle dependency in Y-plan systems, but otherwise pin names
      //  are up to the user.
      CH: {
	// RPi gpio
        gpio: 23,
        history: { // Optional, see README.md#History
          // Where to store the history, and how big to let it grow
          file: "/var/log/hotpot/CH_state.log"
        }
      },
      HW: {
        ...
      }
    },
    rule: [
      // List of rules that are used to control state of the system. Rules
      // are executed in the order they are specified. See README.md.
      {
        name: "Hot Water",
        test_file: "./hw_rules.js"
      },
      {
        name: "Central Heating",
        test_file: "./ch_rules.js"
      }
    ],
    calendar: { // Google calendars
      "Example": {
        id: "primary", // name of the calendar
        // pathname of a file on the server used to cache the
        // authentication for this calendar
        auth_cache: "$HOME/example_calendar.authcache",
        // Secrets used by calendar (see Calendars in README.md)
        secrets: {
          client_id: "768298330134-stsav31ruqclo45nu873opsput6lboabsapps.googleusercontent.com",
        client_secret: "XAffgnutso4kk4whs06dss6DD",
        redirect_uris: [ "urn:ietf:wg:oauth:2.0:oob", "http://localhost" ]
      }
    },
    weather: {
      // Data services providing weather information. In the reference
      // implementation (class "MetOffice", weather information is retrieved
      // from the UK Meteorological Office data service. Each entry here
      // corresponds to the class that provides the service.
      MetOffice: {
        // An API key is required. These are available for free.
        api_key: "f6fd8945-e57f-4768-8fa2-59fa19a5fc6d",
        history: { // Optional, see README.md#History
          file: "/var/log/hotpot/weather.log"
        }
      }
    }
  }
}
