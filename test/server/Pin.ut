/*@preserve Copyright (C) 2021 Crawford Currie http://c-dot.co.uk license MIT*/

/*eslint-env node */

/* global HOTPOT_DEBUG */

describe("Pin", () => {

  const TS = require("../TestSupport.js");
  after(() => TS.after());
  before(required => TS.before({
    Expectation: "test/Expectation" /* global Expectation */,
    Utils: "js/common/Utils" /* global Utils */,
    DataModel: "js/common/DataModel" /* global DataModel */,
    Pin: "js/server/Pin", /* global Pin */
    Service: "js/server/DebugSupport" /* global Service */
  }, required));

	it("initialise/get/set", async () => {
		HOTPOT_DEBUG = new Service();
		return DataModel.remodel({data: {gpio:6}, model: Pin.Model})
		.then(p => {
			assert(p instanceof Pin);
			return p.initialise()
			.then(p => { assert(p instanceof Pin); })
			.then(() => p.getState())
			.then(v => assert.equal(v, 0))
			.then(() => p.setState(1))
			.then(() => p.getState())
			.then(v => assert.equal(v, 1))
			.then(() => p.getSerialisableState())
			.then(log => {
				assert.equal(log.reason, "");
				assert.equal(log.state, 1);
			})
			.then(() => p.getSerialisableLog(0))
			.then(log => {
				assert(!log);
			});
		})
		.then(() => {
			HOTPOT_DEBUG.stop();
		});
	});
});
